name: "Build a Forge project"

on:
  workflow_call:
    inputs:
      cache-path:
        default: |
          cache
          node_modules
          out
          out-optimized
        required: false
        type: "string"

      save-cache:
        default: true
        required: false
        type: "boolean"

      store-artifacts:
        default: false
        required: false
        type: "boolean"

      foundry-profiles:
        default: |
          optimized
          test-optimized
        required: false
        type: "string"

jobs:
  forge-build:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name:
          "Cache the contracts and the node modules. If a match is found for the key, the cache is restored. Otherwise,
          a new cache will be created."
        if: ${{ inputs.save-cache }}
        uses: "actions/cache@v4"
        with:
          key: "build-and-modules-${{ github.sha }}"
          path: ${{ inputs.cache-path }}

      - name: "Install Bun"
        uses: "oven-sh/setup-bun@v2"
        with:
          bun-version: "latest"

      - name: "Install the Node.js dependencies"
        run: "bun install --frozen-lockfile"

      - name: "Show the Forge config"
        run: "forge config"

      - name: "Build contracts with specified profiles"
        run: |
          # Read profiles from the input and build for each one
          echo "${{ inputs.foundry-profiles }}" | while read profile; do
            if [ -n "$profile" ]; then
              echo "Building with profile: $profile"
              FOUNDRY_PROFILE=$profile forge build
            fi
          done

      - name: "Prepare the contract artifacts"
        if: ${{ inputs.store-artifacts }}
        run: "./shell/prepare-artifacts.sh"

      - name: "Store the contract artifacts in CI"
        if: ${{ inputs.store-artifacts }}
        uses: "actions/upload-artifact@v4"
        with:
          name: "contract-artifacts"
          path: "artifacts"

      - name: "Add summary"
        run: |
          echo "## Forge Build result" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Passed" >> $GITHUB_STEP_SUMMARY
